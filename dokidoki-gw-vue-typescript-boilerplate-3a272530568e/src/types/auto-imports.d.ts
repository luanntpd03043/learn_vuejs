/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const CHANGE_EVENT: typeof import('element-plus')['CHANGE_EVENT']
  const EffectScope: typeof import('vue')['EffectScope']
  const ElAlert: typeof import('element-plus')['ElAlert']
  const ElButton: typeof import('element-plus')['ElButton']
  const ElCheckbox: typeof import('element-plus')['ElCheckbox']
  const ElCheckboxGroup: typeof import('element-plus')['ElCheckboxGroup']
  const ElCol: typeof import('element-plus')['ElCol']
  const ElForm: typeof import('element-plus')['ElForm']
  const ElFormItem: typeof import('element-plus')['ElFormItem']
  const ElNotification: typeof import('element-plus')['ElNotification']
  const ElOption: typeof import('element-plus')['ElOption']
  const ElRadio: typeof import('element-plus')['ElRadio']
  const ElRadioGroup: typeof import('element-plus')['ElRadioGroup']
  const ElRow: typeof import('element-plus')['ElRow']
  const ElSelect: typeof import('element-plus')['ElSelect']
  const ElementPlus: typeof import('element-plus')['default']
  const INPUT_EVENT: typeof import('element-plus')['INPUT_EVENT']
  const QueryClient: typeof import('@tanstack/vue-query')['QueryClient']
  const QueryClientProvider: typeof import('@tanstack/vue-query')['QueryClientProvider']
  const UPDATE_MODEL_EVENT: typeof import('element-plus')['UPDATE_MODEL_EVENT']
  const axios: typeof import('axios')['default']
  const camelCase: typeof import('lodash-es')['camelCase']
  const classNames: typeof import('classnames')['default']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createI18n: typeof import('vue-i18n')['createI18n']
  const createPinia: typeof import('pinia')['createPinia']
  const createRouter: typeof import('vue-router')['createRouter']
  const createWebHistory: typeof import('vue-router')['createWebHistory']
  const customRef: typeof import('vue')['customRef']
  const dataSerialization: typeof import('../shared/utils')['dataSerialization']
  const dayjs: typeof import('dayjs')['default']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const forEach: typeof import('lodash-es')['forEach']
  const get: typeof import('lodash-es')['get']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const head: typeof import('lodash-es')['head']
  const indexOf: typeof import('lodash-es')['indexOf']
  const inject: typeof import('vue')['inject']
  const isArray: typeof import('lodash-es')['isArray']
  const isBoolean: typeof import('lodash-es')['isBoolean']
  const isDate: typeof import('lodash-es')['isDate']
  const isEmpty: typeof import('lodash-es')['isEmpty']
  const isNull: typeof import('lodash-es')['isNull']
  const isObject: typeof import('lodash-es')['isObject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isString: typeof import('lodash-es')['isString']
  const keys: typeof import('lodash-es')['keys']
  const map: typeof import('lodash-es')['map']
  const mapValues: typeof import('lodash-es')['mapValues']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const noop: typeof import('lodash-es')['noop']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const pick: typeof import('lodash-es')['pick']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const snakeCase: typeof import('lodash-es')['snakeCase']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const trim: typeof import('lodash-es')['trim']
  const trimData: typeof import('../shared/utils')['trimData']
  const unref: typeof import('vue')['unref']
  const useAsyncValidator: typeof import('@vueuse/integrations/useAsyncValidator')['useAsyncValidator']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAxios: typeof import('@vueuse/integrations/useAxios')['useAxios']
  const useCookies: typeof import('../shared/custom-hooks')['useCookies']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDateTime: typeof import('../shared/custom-hooks')['useDateTime']
  const useDebounceFn: typeof import('@vueuse/core')['useDebounceFn']
  const useFavicon: typeof import('@vueuse/core')['useFavicon']
  const useHttpRequest: typeof import('../shared/custom-hooks')['useHttpRequest']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useInfiniteQuery: typeof import('@tanstack/vue-query')['useInfiniteQuery']
  const useLocalStorage: typeof import('@vueuse/core')['useLocalStorage']
  const useMultipleRequests: typeof import('../shared/custom-hooks')['useMultipleRequests']
  const useMutation: typeof import('@tanstack/vue-query')['useMutation']
  const useQueries: typeof import('@tanstack/vue-query')['useQueries']
  const useQuery: typeof import('@tanstack/vue-query')['useQuery']
  const useQueryClient: typeof import('@tanstack/vue-query')['useQueryClient']
  const useRequest: typeof import('../shared/custom-hooks')['useRequest']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTitle: typeof import('@vueuse/core')['useTitle']
  const useUniversalCookie: typeof import('@vueuse/integrations/useCookies')['useCookies']
  const useVModels: typeof import('@vueuse/core')['useVModels']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const windowRedirect: typeof import('../shared/utils')['windowRedirect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  // @ts-ignore
  export type { ConfigType, Dayjs, OpUnitType, QUnitType } from 'dayjs'
  // @ts-ignore
  export type { DefineStoreOptions, StoreDefinition } from 'pinia'
  // @ts-ignore
  export type { RouteRecordName, RouteLocationNormalizedLoaded, RouteLocationNamedRaw } from 'vue-router'
  // @ts-ignore
  export type { AxiosInstance, AxiosResponse, AxiosError, AxiosRequestConfig, InternalAxiosRequestConfig } from 'axios'
  // @ts-ignore
  export type { UseAxiosOptions, StrictUseAxiosReturn } from '@vueuse/integrations'
  // @ts-ignore
  export type { FormRules, FormInstance, FormItemRule, UploadInstance, UploadFile } from 'element-plus'
}
